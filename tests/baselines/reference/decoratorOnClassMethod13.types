=== tests/cases/conformance/decorators/class/method/decoratorOnClassMethod13.ts ===
declare function dec<T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>
>target : any
>propertyKey : string
>descriptor : TypedPropertyDescriptor<T>

class C {
>C : C

    @dec ["1"]() { }
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>
>["1"] : () => void
>"1" : "1"

    @dec ["b"]() { }
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>
>["b"] : () => void
>"b" : "b"
}

const C1 = class {
>C1 : typeof C1
>class {    @dec ["1"]() { }    @dec ["b"]() { }} : typeof C1

    @dec ["1"]() { }
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>
>["1"] : () => void
>"1" : "1"

    @dec ["b"]() { }
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>
>["b"] : () => void
>"b" : "b"
}

